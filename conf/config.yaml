server:
  runmode: test                 #开发模式, debug, release, test
  port: 8080                    #HTTP绑定端口
  url: http://127.0.0.1:8080    #请求的API服务器的ip:port
  max_ping_count: 10            #尝试的次数
datasource:
  driverName: mysql             #数据库类型
  host: 127.0.0.1               #地址
  port: 3306                    #端口
  database: ginessential        #数据库
  username: root                #用户名
  password: root                #密码
  charset: utf8                 #字符集
log:
  writers: file,stdout          #输出位置，有两个可选项 —— file 和 stdout,选择 file 会将日志记录到 `logger_file` 指定的日志文件中，选择 stdout 会将日志输出到标准输出
  logger_level: DEBUG           #日志级别，DEBUG、INFO、WARN、ERROR、FATAL
  logger_file: log/apiserver.log #指定日志文件
  log_format_text: false        #日志的输出格式，JSON 或者 plaintext，`true` 会输出成非 JSON 格式，`false` 会输出成 JSON 格式
  rollingPolicy: size           #rotate 依据，可选的有 daily 和 size。如果选 daily 则根据天进行转存，如果是 size 则根据大小进行转存
  log_rotate_date: 1            #rotate 转存时间，配 合`rollingPolicy: daily` 使用
  log_rotate_size: 1            #rotate 转存大小，配合 `rollingPolicy: size` 使用
  log_backup_count: 7           #当日志文件达到转存标准时，log 系统会将该日志文件进行压缩备份，这里指定了备份文件的最大个数

